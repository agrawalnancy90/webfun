<!DOCTYPE html> <!-- For backward compatibility -->
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Blogs</title>
		<!-- [if lt IE 9]>
		<script src="js/html5shiv.js"></script>
		<![end if] -->
		<link rel="stylesheet" href="../../../css/blog.css">
		<meta name="description" content="Blogs contains links to my technical blogs that can help you grow with me.">
	</head>
	<body>
		<header role="banner">
			<div class="logo-center">
				<hr>
				<img src="../../../assets/images/blog-logo.png" alt="Promica Blogs Logo">
				<hr>
			</div>
		</header>

		<main role="main">
			<h2>Content Migration from Drupal to WordPress</h2>
			<p class="small-italics center">Posted on <time datetime="2018-09-03">October 25th, 2018</time> by Nancy Agrawal</p>
			<p> Moving information from one system to another can be an overwhelming process, especially when it has a lot of content. Besides, it involves several options and each of those choices comes with its own challenges.
			</p>

			<p> This blog intends to make one such use case easy for you: Move content from a Drupal 7 CMS to WordPress 4.9.
			</p>
			<p>
			The content migration process involves three major steps:
				<ul>
					<li>Knowing what to migrate.</li>
					<li>Exporting it from the current system.</li>
					<li>Importing it into the new system.</li>
				</ul>
			</p>

			<h3>Knowing What You Want to Move</h3>
			<p>The first step in migrating your content is to decide what pages and related information you would want to move to your new system. This also involves understanding how content is organized in your current CMS and how it appears when moved to the new system. You would have to make several design decisions at this point. Let us follow this with an example: 
			</p>

			<p>Knowing my goal, I first explored how Drupal stores its content. I looked at both, the backend database, and the admin dashboard on my website. My Drupal database had more than 300 tables! Yours can vary depending on what modules are active on your Drupal CMS. But do not be overwhelmed by it. Most of these tables contain metadata on how your content is structured, access and revision history etc., and not the actual content itself. Drupal stores its content as nodes. For categorizing content and its better management, the authors / editors / administrators may choose to organize their content into different types of nodes. This can be seen in the ‘Type’ field of drupal_node table. For a non-technical user, it can be seen on the dashboard too.
			</p>

			<p>On the Drupal dashboard, go to Content → Add Content.
				<figure><img class="center-image" src="../../../assets/images/content_types.png" width="80%"><br>
				<span class="small-italics">Figure 1: Different content types in Drupal CMS</span>
				</figure>
				Here you can see all the different types of nodes that your CMS uses to store the content. Figure 1 shows a custom content type - ‘Answer’ that is specific to my website. You can have several others on yours. You might want to list all the content types available on your Drupal instance to plan which type goes where in your new system.
			</p>

			<p>
				Click on any one of those types. You can now see the different fields that go in the selected content type. Figure 2 shows some of the fields for content type ‘Answer’. 
				<figure><img class="center-image" src="../../../assets/images/create_answer.png" width="80%"><br>
				<span class="small-italics">Figure 2: Create content of a particular type.</span>
				</figure>
			</p>

			<p>This step is useful to list down all the fields that you might want to export for a node type. An alternative approach is to go to dashboard, click on content, select the node type and click apply. This lists some of the existing content of the selected type.
			<figure><img class="center-image" src="../../../assets/images/view_type.png" width="90%"><br>
			<span class="small-italics">Figure 3: Select a particular content type.</span>
			</figure>
			You can now select edit (from operations column as shown in figure 4). This gives a better idea of what goes in each field of the content type.
			<figure><img class="center-image" src="../../../assets/images/some_answers.png" width="90%"><br>
			<span class="small-italics">Figure 4: List of some existing content of selected type.</span>
			</figure>
			You can also select one of the content items from the list as shown in Figure 4 to see how this content appears on your current site (Figure 5).
			<figure><img class="center-image" src="../../../assets/images/content_on_site.png"><br>
			<span class="small-italics">Figure 5: Sample of how the content type appears on the site.</span>
			</figure>
			</p>

			<p>
				Before proceeding to the next step, it might be useful to note down all the fields related to each content type that you wish to migrate.
			</p>

			<h3>Exporting Content from Drupal</h3>
			<p>Now that you know what you want to migrate, you can export your content using a Drupal module called <a href="https://www.drupal.org/project/views_data_export" target="_blank">“Views Data Export”</a>. It lets you export large amounts of data in different formats. I worked with CSV and XML, and found XML to be easier to handle as it worked better with the third step - importing into WordPress.
			</p>

			<p>First, install and activate the module Views data export on your Drupal instance. You might have to install some other modules as well that are required by this module. Installing modules in Drupal 7 has been covered <a href="https://www.drupal.org/docs/7/extend/installing-modules" target="_blank">here</a> comprehensively.
			</p>

			<p>Check in your modules that Views Data Export is active. If not, mark the check box next to it and click ‘Save Configuration’.
			<figure><img class="center-image" src="../../../assets/images/modules.png"><br>
				<span class="small-italics">Figure 6: Active Views Modules</span>
			</figure>
			</p>

			<p>Now go to dashboard → Structure → Views → Add New View.
			<figure><img class="center-image" src="../../../assets/images/views.png"><br>
				<span class="small-italics">Figure 7: Add new view</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/add_view1.png" width="80%"><br>
				<span class="small-italics">Figure 8: Add new view fields.</span>
			</figure>
			</p>

			<p>Enter view name: Export Demo. Select Description and add description if you like. Unselect the checkbox next to Create a page. This shrinks the options and leaves us with only what we need.
			<figure><img class="center-image" src="../../../assets/images/add_view2.png" width="80%"><br>
				<span class="small-italics">Figure 9: Only relevant options.</span>
			</figure>
			</p>

			<p>The drop-down of ‘Show’ contains several options. In this blog, we will only explore Content. Other options can be selected and worked upon in the same way. Select ‘of type’ from the drop-down. I am exporting the content type ‘Answers’ for this demo. You can even select a particular tag. For example, if you have some pages which are tagged with the term ‘service’ and you are interested in exporting only those pages, then you enter ‘service’ in the ‘tagged-with’ field. Now select ‘Continue &amp; edit’. 
			<figure><img class="center-image" src="../../../assets/images/add_view3.png" width="80%"><br>
				<span class="small-italics">Figure 10: Select content type and Continue &amp; edit.</span>
			</figure>

			<figure><img class="center-image" src="../../../assets/images/add_view4.png" width="80%"><br>
				<span class="small-italics">Figure 11: Export Demo screen with changes not saved yet.</span>
			</figure>	
			</p>

			<p>You will see a warning at the top of this screen saying “All changes are saved temporarily”. Whenever you make any changes, you should click on ‘Save’ on the top right corner of this screen, otherwise the changes are lost when you refresh the page. At the bottom of this screen, you will see an option with Auto-preview checked. Uncheck it for faster processing. Whenever you want a preview, you can click on Update preview.
			<figure><img class="center-image" src="../../../assets/images/add_view5.png" width="80%"><br>
				<span class="small-italics">Figure 12: Uncheck Auto preview for faster processing.</span>
			</figure>
			</p>

			<p>Now click on Add and select Data export from the drop-down.
			<figure><img class="center-image" src="../../../assets/images/add_view6.png" width="80%"><br>
				<span class="small-italics">Figure 13: Add Data export view.</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/add_view7.png" width="80%"><br>
				<span class="small-italics">Figure 14: Added Data export view.</span>
			</figure>
			</p>

			<p>We are now ready to set the required export configuration. First, we select XML format by clicking on CSV file and selecting XML from the options. Check the box ‘Provide as file’ and give a filename. Click Apply.
			<figure><img class="center-image" src="../../../assets/images/add_view8.png" width="80%"><br>
				<span class="small-italics">Figure 15: Selecting file format as XML.</span>
			</figure>
			</p>

			<p>In the Fields section, click on Add, search for the fields related to your content type and add them by clicking on ‘Apply (all displays)’.
			<figure><img class="center-image" src="../../../assets/images/add_view9.png" width="80%"><br>
				<span class="small-italics">Figure 16: Adding fields to view.</span>
			</figure>
			</p>
			<p>It then takes you to Configure Field window for each field that you selected. Enter a label that you would want as your XML tag for that field and select Apply (all displays). You can add/delete fields later on as well.
			<figure><img class="center-image" src="../../../assets/images/add_view10.png" width="80%"><br>
				<span class="small-italics">Figure 17: Configuring field label.</span>
			</figure>
			</p>
			<p>Once you have selected all the required fields, they show up in the Fields section as shown in Figure 18.
			<figure><img class="center-image" src="../../../assets/images/add_view11.png" width="80%"><br>
				<span class="small-italics">Figure 18: Displaying selected fields.</span>
			</figure>
			</p>
			<p>You can add or remove any field to the Filter Criteria and only the filtered content will be exported. For example, Figure 18 shows that only published content will be exported. You can remove this filter by clicking on the drop-down next to Add button. This will export unpublished content as well.
			</p>

			<p>Next we configure Data Export Settings. Click on ‘No path is set’ and add a unique path. Eg. export-demo. On ‘Batched export’, click on No and make changes as shown in Figure 19.
			<figure><img class="center-image" src="../../../assets/images/add_view12.png" width="80%"><br>
				<span class="small-italics">Figure 19: Batched export settings.</span>
			</figure>	
			</p>
			<p>Select Permissions to None. For ‘Items to display’, select Display all items and Apply. Leave the pager options unaltered and Apply (all displays).
			<figure><img class="center-image" src="../../../assets/images/add_view13.png" width="80%"><br>
				<span class="small-italics">Figure 20: Select display all items.</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/add_view14.png" width="80%"><br>
				<span class="small-italics">Figure 21: Leave pager options to default and select Apply (all displays).</span>
			</figure>				
			</p>
			<p>Now click on Save at the top right corner of the window. Click Update Preview and you can see the expected output of the xml file. Make changes in the fields according to your needs. Remember to Save after making the changes. Now go to your drupal site and enter the export path after your main site path in the URL. Eg. http://localhost:8888/my-website.com/export-demo  and load the page. Your xml file with exported content is ready for download.
			</p>

			<h3>Importing Content into WordPress</h3>
			<p>Content can be imported into WordPress using the <a href="http://www.wpallimport.com/documentation/" target="_blank">“WP All Import”</a> plugin. The look and feel of your imported content depends on the theme that you are importing to. The general process is as follows:</p>

			<p>On your WordPress dashboard, go to All Import → New Import.
			<figure><img class="center-image" src="../../../assets/images/import1.png" width="40%"><br>
				<span class="small-italics">Figure 22: New import option of WP All Import.</span>
			</figure>				
			</p>
			<p>Select ‘Upload a file’ and upload the xml file generated from Views Data Export. 
			<figure><img class="center-image" src="../../../assets/images/import2.png" width="80%"><br>
				<span class="small-italics">Figure 23: Option to upload XML or CSV file.</span>
			</figure>				
			</p>
			<p>After uploading the file, you need to select how you want your content to be rendered on your WordPress theme. For example, my theme does not support generalized posts to be displayed in any component. Therefore, I select a particular type (say News) of posts. You can select whichever look and feel suits your content and is supported by your theme.Then select ‘Continue to Step 2’.
			<figure><img class="center-image" src="../../../assets/images/import3.png" width="80%"><br>
				<span class="small-italics">Figure 24: Different types of content on the WordPress theme.</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/import5.png" width="80%"><br>
				<span class="small-italics">Figure 25: Continue to Step 2 after selecting your content type.</span>
			</figure>
			</p>
			<p>The next field displays the number of elements that will be imported. You can even select a particular element from the left column with the heading ‘What element are you looking for?’ This is useful for importing elements from your xml selectively.
			<figure><img class="center-image" src="../../../assets/images/import6.png" width="80%"><br>
				<span class="small-italics">Figure 26: Step 2 displaying the elements to be imported.</span>
			</figure>
			</p>
			<p>The window at the bottom of this step lets you add rules to filter what to import. For example, I have an element called ‘isPublished’ in my xml and I want to import only those nodes for which isPublished has a value ‘Yes’.  From the ‘Select Element’ dropdown, I select the element isPublished, select rule ‘equals’ and add the value ‘Yes’ to the Value field and click ‘Add Rule’.
			<figure><img class="center-image" src="../../../assets/images/import8.png" width="80%"><br>
				<span class="small-italics">Figure 27: Selecting the element to apply filter on.</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/import9.png" width="80%"><br>
				<span class="small-italics">Figure 28: Adding rule to the element isPublished.</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/import10.png" width="80%"><br>
				<span class="small-italics">Figure 29: Adding the rule with the value ‘Yes’.</span>
			</figure>
			</p>

			<p>The rule shows up at the bottom. Click ‘Apply Filters to XPath’. This will reflect how many nodes fulfil this filter criterion at the top and will only import those nodes. Figure 26 shows 1024 nodes, whereas after applying this filter, I now have 473 nodes that I want to import. Click ‘Continue to Step 3’. 
			<figure><img class="center-image" src="../../../assets/images/import11.png" width="80%"><br>
				<span class="small-italics">Figure 30: Number of nodes that fulfil the filter criterion.</span>
			</figure>
			</p>

			<p>In this step we drag and drop elements from the right column, to the appropriate fields. For example, on expanding Title & Content (by clicking on the dropdown arrow on its right), I see a field to drag and drop some element from the xml into this field. In my example, &lt;Title&gt; is an appropriate element for this field, so I click on &lt;Title&gt; in the xml from the right column and drag-drop it in the Title field.
			<figure><img class="center-image" src="../../../assets/images/import12.png" width="80%"><br>
				<span class="small-italics">Figure 31: Fields for mapping xml elements.</span>
			</figure>
			<figure><img class="center-image" src="../../../assets/images/import13.png" width="80%"><br>
				<span class="small-italics">Figure 32: Drag and Drop &lt;Title&gt; element into Title &amp; Content Field.</span>
			</figure>
			</p>
			<p>To decide what goes where, you might want to take a look at a sample of that content type in WordPress. If none exists, you would need to create a dummy post of that type. Since I am importing into News posts, this is how my dummy News post looks on my theme:
			<figure><img class="center-image" src="../../../assets/images/news.png" width="60%"><br>
				<span class="small-italics">Figure 33: A Dummy News Post on my WordPress theme.</span>
			</figure>
			</p>
			<p>This dummy news post helps me decide where I would want to place what part of my exported content. This also helps in auto detection of custom fields.
			</p>
			

										
			</article>
		</main>

		<aside role="complementary">
			<!--<h3>Ads</h3>-->
		</aside>

		<footer role="contactinfo"><!--disclaimer and contact me --></footer>

	</body>
</html>

