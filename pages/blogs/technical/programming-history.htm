Standing on the Shoulders of Giants!


Programming began with the invention of Von Neumann computer which was a computer with a memory, and you could load the program in memory and then execute that program. So they were called the general-purpose computers, the first ones being invented in the late 1940s. So programming began in 1950s. People hadn't thought about programming languages yet, because there was nothing to program. There was the computer hardware that understood 0's and 1's. So people started writing programs in binary or assembly language (op codes instead of 0's and 1's). Next came the need for programming scientific work like formulae. Thus came the first programming language - FORTRAN (Formula Translation). Different computers had different assembly languages based on their architecture. So a language was needed that did not need rewriting the program for different machines. But FORTRAN relied on goto statements leading to spaghetti-like code, not knowing the flow of the program by reading it. Also there were deficiencies like the type-system was very limited (ony numbers, characters and arrays), no structures, no dynamic memory allocation, no new operator, no recursion, no runtime stack, no pointers. People wanted more and more. So structural programming came into existence. Structured programming means, single-entry and single-exit from every execution unit. It had recursions and pointers too. Many languages like C, Ada, Algol, Pascal came into being. People loved structured programming for a long time, but then they got dissatisfied with that too. For large software and applications, structured programming languages started to show some shortcomings. A major shortcoming was big reliance on global data structures. Because there were no classes, and there were stand-alone functions, all working on the same data, the only appropriate place to put that data was global data structures. Debugging such a program is really difficult because all the functions that modify the global data are potential culprits. Thus came Object Oriented programming. 